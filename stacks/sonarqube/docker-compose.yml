version: "3"

services:
  sonarqube:
    image: sonarqube:community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - traefik-proxy
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${INSTANCE}.entrypoints=http"
      - "traefik.http.routers.${INSTANCE}.rule=Host(`${DOMAIN}`)"
      - "traefik.http.middlewares.${INSTANCE}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.${INSTANCE}.middlewares=${INSTANCE}-https-redirect"
      - "traefik.http.routers.${INSTANCE}-secure.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${INSTANCE}-secure.entrypoints=https"
      - "traefik.http.routers.${INSTANCE}-secure.tls=true"
      - "traefik.http.routers.${INSTANCE}-secure.tls.certresolver=http"
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
      - internal
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

networks:
  internal:
  traefik-proxy:
    external: true

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
